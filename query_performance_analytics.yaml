entity: model/Transform:v1
name: Query Performance Analytics
identifier: query-performance-analytics
description: Analyzes query execution performance and identifies slow-running queries for optimization
tags: []
database: AppDB
target:
  type: table
  name: PUBLIC.query_performance_summary
source: |
  WITH query_stats AS (
    SELECT 
      qe.id,
      qe.started_at::date as execution_date,
      qe.running_time,
      qe.result_rows,
      qe.native,
      qe.context,
      qe.error,
      rc.name as card_name,
      rc.creator_id,
      rc.database_id,
      CASE 
        WHEN qe.running_time < 1000 THEN 'Fast (<1s)'
        WHEN qe.running_time < 5000 THEN 'Medium (1-5s)'
        WHEN qe.running_time < 30000 THEN 'Slow (5-30s)'
        ELSE 'Very Slow (>30s)'
      END as performance_category
    FROM query_execution qe
    LEFT JOIN report_card rc ON qe.card_id = rc.id
    WHERE qe.started_at >= CURRENT_DATE - INTERVAL '30 days'
  )
  SELECT 
    execution_date,
    performance_category,
    COUNT(*) as query_count,
    AVG(running_time) as avg_running_time_ms,
    PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY running_time) as median_running_time_ms,
    PERCENTILE_CONT(0.95) WITHIN GROUP (ORDER BY running_time) as p95_running_time_ms,
    MAX(running_time) as max_running_time_ms,
    SUM(CASE WHEN error IS NOT NULL THEN 1 ELSE 0 END) as error_count,
    AVG(result_rows) as avg_result_rows,
    COUNT(DISTINCT card_name) as unique_cards_run,
    COUNT(DISTINCT creator_id) as unique_users
  FROM query_stats
  GROUP BY execution_date, performance_category
  ORDER BY execution_date DESC, 
           CASE performance_category 
             WHEN 'Very Slow (>30s)' THEN 1
             WHEN 'Slow (5-30s)' THEN 2  
             WHEN 'Medium (1-5s)' THEN 3
             WHEN 'Fast (<1s)' THEN 4
           END;
